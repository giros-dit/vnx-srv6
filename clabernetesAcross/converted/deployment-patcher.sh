#!/bin/bash
TOPO_NAME=srv6
NS=c9s-srv6

yq() {
  docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"
}

PATCH=$(kubectl get deployment $(kubectl -n $NS get deployments | grep r1 | awk '{print $1}') -n $NS -o yaml | yq '.spec.template.metadata.annotations."k8s.v1.cni.cncf.io/networks" = "[{\"name\": \"net1001\", \"namespace\": \"c9s-srv6\", \"interface\": \"net1001\"},{\"name\": \"net1005\", \"namespace\": \"c9s-srv6\", \"interface\": \"net1005\"},{\"name\": \"net1009\", \"namespace\": \"c9s-srv6\", \"interface\": \"net1009\"}]"' -); kubectl patch deployment $(kubectl -n $NS get deployments | grep r1 | awk '{print $1}') -n $NS -o yaml --patch "$PATCH"
PATCH=$(kubectl get deployment $(kubectl -n $NS get deployments | grep r2 | awk '{print $1}') -n $NS -o yaml | yq '.spec.template.metadata.annotations."k8s.v1.cni.cncf.io/networks" = "[{\"name\": \"net1001\", \"namespace\": \"c9s-srv6\", \"interface\": \"net1001\"},{\"name\": \"net1002\", \"namespace\": \"c9s-srv6\", \"interface\": \"net1002\"},{\"name\": \"net1006\", \"namespace\": \"c9s-srv6\", \"interface\": \"net1006\"},{\"name\": \"net1013\", \"namespace\": \"c9s-srv6\", \"interface\": \"net1013\"}]"' -); kubectl patch deployment $(kubectl -n $NS get deployments | grep r2 | awk '{print $1}') -n $NS -o yaml --patch "$PATCH"
PATCH=$(kubectl get deployment $(kubectl -n $NS get deployments | grep r4 | awk '{print $1}') -n $NS -o yaml | yq '.spec.template.metadata.annotations."k8s.v1.cni.cncf.io/networks" = "[{\"name\": \"net1005\", \"namespace\": \"c9s-srv6\", \"interface\": \"net1005\"},{\"name\": \"net1003\", \"namespace\": \"c9s-srv6\", \"interface\": \"net1003\"},{\"name\": \"net1010\", \"namespace\": \"c9s-srv6\", \"interface\": \"net1010\"}]"' -); kubectl patch deployment $(kubectl -n $NS get deployments | grep r4 | awk '{print $1}') -n $NS -o yaml --patch "$PATCH"
PATCH=$(kubectl get deployment $(kubectl -n $NS get deployments | grep r12 | awk '{print $1}') -n $NS -o yaml | yq '.spec.template.metadata.annotations."k8s.v1.cni.cncf.io/networks" = "[{\"name\": \"net1013\", \"namespace\": \"c9s-srv6\", \"interface\": \"net1013\"},{\"name\": \"net1014\", \"namespace\": \"c9s-srv6\", \"interface\": \"net1014\"},{\"name\": \"net2003\", \"namespace\": \"c9s-srv6\", \"interface\": \"net2003\"}]"' -); kubectl patch deployment $(kubectl -n $NS get deployments | grep r12 | awk '{print $1}') -n $NS -o yaml --patch "$PATCH"
PATCH=$(kubectl get deployment $(kubectl -n $NS get deployments | grep r13 | awk '{print $1}') -n $NS -o yaml | yq '.spec.template.metadata.annotations."k8s.v1.cni.cncf.io/networks" = "[{\"name\": \"net1011\", \"namespace\": \"c9s-srv6\", \"interface\": \"net1011\"},{\"name\": \"net1012\", \"namespace\": \"c9s-srv6\", \"interface\": \"net1012\"},{\"name\": \"net2001\", \"namespace\": \"c9s-srv6\", \"interface\": \"net2001\"}]"' -); kubectl patch deployment $(kubectl -n $NS get deployments | grep r13 | awk '{print $1}') -n $NS -o yaml --patch "$PATCH"
PATCH=$(kubectl get deployment $(kubectl -n $NS get deployments | grep UPF | awk '{print $1}') -n $NS -o yaml | yq '.spec.template.metadata.annotations."k8s.v1.cni.cncf.io/networks" = "[{\"name\": \"net2001\", \"namespace\": \"c9s-srv6\", \"interface\": \"net2001\"}]"' -); kubectl patch deployment $(kubectl -n $NS get deployments | grep UPF | awk '{print $1}') -n $NS -o yaml --patch "$PATCH"
PATCH=$(kubectl get deployment $(kubectl -n $NS get deployments | grep gNB2 | awk '{print $1}') -n $NS -o yaml | yq '.spec.template.metadata.annotations."k8s.v1.cni.cncf.io/networks" = "[{\"name\": \"net2003\", \"namespace\": \"c9s-srv6\", \"interface\": \"net2003\"}]"' -); kubectl patch deployment $(kubectl -n $NS get deployments | grep gNB2 | awk '{print $1}') -n $NS -o yaml --patch "$PATCH"
PATCH=$(kubectl get deployment $(kubectl -n $NS get deployments | grep r3 | awk '{print $1}') -n $NS -o yaml | yq '.spec.template.metadata.annotations."k8s.v1.cni.cncf.io/networks" = "[{\"name\": \"net1002\", \"namespace\": \"c9s-srv6\", \"interface\": \"net1002\"},{\"name\": \"net1008\", \"namespace\": \"c9s-srv6\", \"interface\": \"net1008\"},{\"name\": \"net1014\", \"namespace\": \"c9s-srv6\", \"interface\": \"net1014\"},{\"name\": \"net1011\", \"namespace\": \"c9s-srv6\", \"interface\": \"net1011\"}]"' -); kubectl patch deployment $(kubectl -n $NS get deployments | grep r3 | awk '{print $1}') -n $NS -o yaml --patch "$PATCH"
PATCH=$(kubectl get deployment $(kubectl -n $NS get deployments | grep r5 | awk '{print $1}') -n $NS -o yaml | yq '.spec.template.metadata.annotations."k8s.v1.cni.cncf.io/networks" = "[{\"name\": \"net1006\", \"namespace\": \"c9s-srv6\", \"interface\": \"net1006\"},{\"name\": \"net1007\", \"namespace\": \"c9s-srv6\", \"interface\": \"net1007\"}]"' -); kubectl patch deployment $(kubectl -n $NS get deployments | grep r5 | awk '{print $1}') -n $NS -o yaml --patch "$PATCH"
PATCH=$(kubectl get deployment $(kubectl -n $NS get deployments | grep r6 | awk '{print $1}') -n $NS -o yaml | yq '.spec.template.metadata.annotations."k8s.v1.cni.cncf.io/networks" = "[{\"name\": \"net1003\", \"namespace\": \"c9s-srv6\", \"interface\": \"net1003\"},{\"name\": \"net1007\", \"namespace\": \"c9s-srv6\", \"interface\": \"net1007\"},{\"name\": \"net1004\", \"namespace\": \"c9s-srv6\", \"interface\": \"net1004\"}]"' -); kubectl patch deployment $(kubectl -n $NS get deployments | grep r6 | awk '{print $1}') -n $NS -o yaml --patch "$PATCH"
PATCH=$(kubectl get deployment $(kubectl -n $NS get deployments | grep r7 | awk '{print $1}') -n $NS -o yaml | yq '.spec.template.metadata.annotations."k8s.v1.cni.cncf.io/networks" = "[{\"name\": \"net1008\", \"namespace\": \"c9s-srv6\", \"interface\": \"net1008\"},{\"name\": \"net1004\", \"namespace\": \"c9s-srv6\", \"interface\": \"net1004\"},{\"name\": \"net1012\", \"namespace\": \"c9s-srv6\", \"interface\": \"net1012\"}]"' -); kubectl patch deployment $(kubectl -n $NS get deployments | grep r7 | awk '{print $1}') -n $NS -o yaml --patch "$PATCH"
PATCH=$(kubectl get deployment $(kubectl -n $NS get deployments | grep r11 | awk '{print $1}') -n $NS -o yaml | yq '.spec.template.metadata.annotations."k8s.v1.cni.cncf.io/networks" = "[{\"name\": \"net1009\", \"namespace\": \"c9s-srv6\", \"interface\": \"net1009\"},{\"name\": \"net1010\", \"namespace\": \"c9s-srv6\", \"interface\": \"net1010\"},{\"name\": \"net2002\", \"namespace\": \"c9s-srv6\", \"interface\": \"net2002\"}]"' -); kubectl patch deployment $(kubectl -n $NS get deployments | grep r11 | awk '{print $1}') -n $NS -o yaml --patch "$PATCH"
PATCH=$(kubectl get deployment $(kubectl -n $NS get deployments | grep gNB1 | awk '{print $1}') -n $NS -o yaml | yq '.spec.template.metadata.annotations."k8s.v1.cni.cncf.io/networks" = "[{\"name\": \"net2002\", \"namespace\": \"c9s-srv6\", \"interface\": \"net2002\"}]"' -); kubectl patch deployment $(kubectl -n $NS get deployments | grep gNB1 | awk '{print $1}') -n $NS -o yaml --patch "$PATCH"
PATCH=$(kubectl get cm srv6 -n $NS -o yaml | yq '.data.r1 |= (. | fromjson | .topology.links += [{"endpoints": ["macvlan:net1001", "r1:eth1"]}] | tojson)'); kubectl patch cm srv6 -n $NS -o yaml --patch "$PATCH"
PATCH=$(kubectl get cm srv6 -n $NS -o yaml | yq '.data.r1 |= (. | fromjson | .topology.links += [{"endpoints": ["macvlan:net1005", "r1:eth2"]}] | tojson)'); kubectl patch cm srv6 -n $NS -o yaml --patch "$PATCH"
PATCH=$(kubectl get cm srv6 -n $NS -o yaml | yq '.data.r1 |= (. | fromjson | .topology.links += [{"endpoints": ["macvlan:net1009", "r1:eth3"]}] | tojson)'); kubectl patch cm srv6 -n $NS -o yaml --patch "$PATCH"
PATCH=$(kubectl get cm srv6 -n $NS -o yaml | yq '.data.r2 |= (. | fromjson | .topology.links += [{"endpoints": ["macvlan:net1001", "r2:eth1"]}] | tojson)'); kubectl patch cm srv6 -n $NS -o yaml --patch "$PATCH"
PATCH=$(kubectl get cm srv6 -n $NS -o yaml | yq '.data.r2 |= (. | fromjson | .topology.links += [{"endpoints": ["macvlan:net1002", "r2:eth2"]}] | tojson)'); kubectl patch cm srv6 -n $NS -o yaml --patch "$PATCH"
PATCH=$(kubectl get cm srv6 -n $NS -o yaml | yq '.data.r2 |= (. | fromjson | .topology.links += [{"endpoints": ["macvlan:net1006", "r2:eth3"]}] | tojson)'); kubectl patch cm srv6 -n $NS -o yaml --patch "$PATCH"
PATCH=$(kubectl get cm srv6 -n $NS -o yaml | yq '.data.r2 |= (. | fromjson | .topology.links += [{"endpoints": ["macvlan:net1013", "r2:eth4"]}] | tojson)'); kubectl patch cm srv6 -n $NS -o yaml --patch "$PATCH"
PATCH=$(kubectl get cm srv6 -n $NS -o yaml | yq '.data.r3 |= (. | fromjson | .topology.links += [{"endpoints": ["macvlan:net1002", "r3:eth1"]}] | tojson)'); kubectl patch cm srv6 -n $NS -o yaml --patch "$PATCH"
PATCH=$(kubectl get cm srv6 -n $NS -o yaml | yq '.data.r3 |= (. | fromjson | .topology.links += [{"endpoints": ["macvlan:net1008", "r3:eth2"]}] | tojson)'); kubectl patch cm srv6 -n $NS -o yaml --patch "$PATCH"
PATCH=$(kubectl get cm srv6 -n $NS -o yaml | yq '.data.r3 |= (. | fromjson | .topology.links += [{"endpoints": ["macvlan:net1014", "r3:eth3"]}] | tojson)'); kubectl patch cm srv6 -n $NS -o yaml --patch "$PATCH"
PATCH=$(kubectl get cm srv6 -n $NS -o yaml | yq '.data.r3 |= (. | fromjson | .topology.links += [{"endpoints": ["macvlan:net1011", "r3:eth4"]}] | tojson)'); kubectl patch cm srv6 -n $NS -o yaml --patch "$PATCH"
PATCH=$(kubectl get cm srv6 -n $NS -o yaml | yq '.data.r4 |= (. | fromjson | .topology.links += [{"endpoints": ["macvlan:net1005", "r4:eth1"]}] | tojson)'); kubectl patch cm srv6 -n $NS -o yaml --patch "$PATCH"
PATCH=$(kubectl get cm srv6 -n $NS -o yaml | yq '.data.r4 |= (. | fromjson | .topology.links += [{"endpoints": ["macvlan:net1003", "r4:eth2"]}] | tojson)'); kubectl patch cm srv6 -n $NS -o yaml --patch "$PATCH"
PATCH=$(kubectl get cm srv6 -n $NS -o yaml | yq '.data.r4 |= (. | fromjson | .topology.links += [{"endpoints": ["macvlan:net1010", "r4:eth3"]}] | tojson)'); kubectl patch cm srv6 -n $NS -o yaml --patch "$PATCH"
PATCH=$(kubectl get cm srv6 -n $NS -o yaml | yq '.data.r5 |= (. | fromjson | .topology.links += [{"endpoints": ["macvlan:net1006", "r5:eth1"]}] | tojson)'); kubectl patch cm srv6 -n $NS -o yaml --patch "$PATCH"
PATCH=$(kubectl get cm srv6 -n $NS -o yaml | yq '.data.r5 |= (. | fromjson | .topology.links += [{"endpoints": ["macvlan:net1007", "r5:eth2"]}] | tojson)'); kubectl patch cm srv6 -n $NS -o yaml --patch "$PATCH"
PATCH=$(kubectl get cm srv6 -n $NS -o yaml | yq '.data.r6 |= (. | fromjson | .topology.links += [{"endpoints": ["macvlan:net1003", "r6:eth1"]}] | tojson)'); kubectl patch cm srv6 -n $NS -o yaml --patch "$PATCH"
PATCH=$(kubectl get cm srv6 -n $NS -o yaml | yq '.data.r6 |= (. | fromjson | .topology.links += [{"endpoints": ["macvlan:net1007", "r6:eth2"]}] | tojson)'); kubectl patch cm srv6 -n $NS -o yaml --patch "$PATCH"
PATCH=$(kubectl get cm srv6 -n $NS -o yaml | yq '.data.r6 |= (. | fromjson | .topology.links += [{"endpoints": ["macvlan:net1004", "r6:eth3"]}] | tojson)'); kubectl patch cm srv6 -n $NS -o yaml --patch "$PATCH"
PATCH=$(kubectl get cm srv6 -n $NS -o yaml | yq '.data.r7 |= (. | fromjson | .topology.links += [{"endpoints": ["macvlan:net1008", "r7:eth1"]}] | tojson)'); kubectl patch cm srv6 -n $NS -o yaml --patch "$PATCH"
PATCH=$(kubectl get cm srv6 -n $NS -o yaml | yq '.data.r7 |= (. | fromjson | .topology.links += [{"endpoints": ["macvlan:net1004", "r7:eth2"]}] | tojson)'); kubectl patch cm srv6 -n $NS -o yaml --patch "$PATCH"
PATCH=$(kubectl get cm srv6 -n $NS -o yaml | yq '.data.r7 |= (. | fromjson | .topology.links += [{"endpoints": ["macvlan:net1012", "r7:eth3"]}] | tojson)'); kubectl patch cm srv6 -n $NS -o yaml --patch "$PATCH"
PATCH=$(kubectl get cm srv6 -n $NS -o yaml | yq '.data.r11 |= (. | fromjson | .topology.links += [{"endpoints": ["macvlan:net1009", "r11:eth1"]}] | tojson)'); kubectl patch cm srv6 -n $NS -o yaml --patch "$PATCH"
PATCH=$(kubectl get cm srv6 -n $NS -o yaml | yq '.data.r11 |= (. | fromjson | .topology.links += [{"endpoints": ["macvlan:net1010", "r11:eth2"]}] | tojson)'); kubectl patch cm srv6 -n $NS -o yaml --patch "$PATCH"
PATCH=$(kubectl get cm srv6 -n $NS -o yaml | yq '.data.r11 |= (. | fromjson | .topology.links += [{"endpoints": ["macvlan:net2002", "r11:eth3"]}] | tojson)'); kubectl patch cm srv6 -n $NS -o yaml --patch "$PATCH"
PATCH=$(kubectl get cm srv6 -n $NS -o yaml | yq '.data.r12 |= (. | fromjson | .topology.links += [{"endpoints": ["macvlan:net1013", "r12:eth1"]}] | tojson)'); kubectl patch cm srv6 -n $NS -o yaml --patch "$PATCH"
PATCH=$(kubectl get cm srv6 -n $NS -o yaml | yq '.data.r12 |= (. | fromjson | .topology.links += [{"endpoints": ["macvlan:net1014", "r12:eth2"]}] | tojson)'); kubectl patch cm srv6 -n $NS -o yaml --patch "$PATCH"
PATCH=$(kubectl get cm srv6 -n $NS -o yaml | yq '.data.r12 |= (. | fromjson | .topology.links += [{"endpoints": ["macvlan:net2003", "r12:eth3"]}] | tojson)'); kubectl patch cm srv6 -n $NS -o yaml --patch "$PATCH"
PATCH=$(kubectl get cm srv6 -n $NS -o yaml | yq '.data.r13 |= (. | fromjson | .topology.links += [{"endpoints": ["macvlan:net1011", "r13:eth1"]}] | tojson)'); kubectl patch cm srv6 -n $NS -o yaml --patch "$PATCH"
PATCH=$(kubectl get cm srv6 -n $NS -o yaml | yq '.data.r13 |= (. | fromjson | .topology.links += [{"endpoints": ["macvlan:net1012", "r13:eth2"]}] | tojson)'); kubectl patch cm srv6 -n $NS -o yaml --patch "$PATCH"
PATCH=$(kubectl get cm srv6 -n $NS -o yaml | yq '.data.r13 |= (. | fromjson | .topology.links += [{"endpoints": ["macvlan:net2001", "r13:eth3"]}] | tojson)'); kubectl patch cm srv6 -n $NS -o yaml --patch "$PATCH"
PATCH=$(kubectl get cm srv6 -n $NS -o yaml | yq '.data.gNB1 |= (. | fromjson | .topology.links += [{"endpoints": ["macvlan:net2002", "gNB1:eth1"]}] | tojson)'); kubectl patch cm srv6 -n $NS -o yaml --patch "$PATCH"
PATCH=$(kubectl get cm srv6 -n $NS -o yaml | yq '.data.gNB2 |= (. | fromjson | .topology.links += [{"endpoints": ["macvlan:net2003", "gNB2:eth1"]}] | tojson)'); kubectl patch cm srv6 -n $NS -o yaml --patch "$PATCH"
PATCH=$(kubectl get cm srv6 -n $NS -o yaml | yq '.data.UPF |= (. | fromjson | .topology.links += [{"endpoints": ["macvlan:net2001", "UPF:eth1"]}] | tojson)'); kubectl patch cm srv6 -n $NS -o yaml --patch "$PATCH"
kubectl rollout restart deployment $(kubectl -n $NS get deployments | grep r1 | awk '{print $1}') -n $NS
kubectl rollout restart deployment $(kubectl -n $NS get deployments | grep r2 | awk '{print $1}') -n $NS
kubectl rollout restart deployment $(kubectl -n $NS get deployments | grep r3 | awk '{print $1}') -n $NS
kubectl rollout restart deployment $(kubectl -n $NS get deployments | grep r4 | awk '{print $1}') -n $NS
kubectl rollout restart deployment $(kubectl -n $NS get deployments | grep r5 | awk '{print $1}') -n $NS
kubectl rollout restart deployment $(kubectl -n $NS get deployments | grep r6 | awk '{print $1}') -n $NS
kubectl rollout restart deployment $(kubectl -n $NS get deployments | grep r7 | awk '{print $1}') -n $NS
kubectl rollout restart deployment $(kubectl -n $NS get deployments | grep r11 | awk '{print $1}') -n $NS
kubectl rollout restart deployment $(kubectl -n $NS get deployments | grep r12 | awk '{print $1}') -n $NS
kubectl rollout restart deployment $(kubectl -n $NS get deployments | grep r13 | awk '{print $1}') -n $NS
kubectl rollout restart deployment $(kubectl -n $NS get deployments | grep gNB1 | awk '{print $1}') -n $NS
kubectl rollout restart deployment $(kubectl -n $NS get deployments | grep gNB2 | awk '{print $1}') -n $NS
kubectl rollout restart deployment $(kubectl -n $NS get deployments | grep UPF | awk '{print $1}') -n $NS
