apiVersion: apps/v1
kind: Deployment
metadata:
  name: flows-api
  namespace: default
  labels:
    app: flows-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flows-api
  template:
    metadata:
      labels:
        app: flows-api
    spec:
      containers:
      - name: flows-api
        image: flows-api:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 5000
          name: http
        env:
        - name: S3_ENDPOINT
          value: "http://138.4.21.162:9000"
        - name: S3_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: experiment-analysis-secrets
              key: S3_ACCESS_KEY
        - name: S3_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: experiment-analysis-secrets
              key: S3_SECRET_KEY
        - name: S3_API
          value: "s3v4"
        - name: S3_PATH
          value: "auto"
        - name: S3_BUCKET
          value: "test-experiment"
        volumeMounts:
        - name: ssh-key
          mountPath: /root/.ssh
          readOnly: true
        - name: networkinfo
          mountPath: /app/networkinfo.json
          subPath: networkinfo.json
          readOnly: true
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        readinessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 10
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 30
      volumes:
      - name: ssh-key
        secret:
          secretName: ssh-key
          defaultMode: 0600
      - name: networkinfo
        configMap:
          name: networkinfo
          items:
          - key: networkinfo.json
            path: networkinfo.json
      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  name: flows-api-service
  namespace: default
  labels:
    app: flows-api
spec:
  selector:
    app: flows-api
  ports:
  - name: http
    port: 80
    targetPort: 5000
    protocol: TCP
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: flows-api-ingress
  namespace: default
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
  - host: flows-api.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: flows-api-service
            port:
              number: 80