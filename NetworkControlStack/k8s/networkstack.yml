apiVersion: apps/v1
kind: Deployment
metadata:
  name: networkstack
  namespace: across-tc32
spec:
  selector:
    matchLabels:
      app: networkstack
  template:
    metadata:
      labels:
        app: networkstack
    spec:
      containers:
      - name: networkstack
        image: ghcr.io/giros-dit/vnx-srv6/network-control-stack:latest
        ports:
        - containerPort: 5000
          name: flask-api
        env:
        - name: S3_ENDPOINT
          value: "http://138.4.21.162:9000"
        - name: S3_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: experiment-analysis-secrets
              key: S3_ACCESS_KEY
        - name: S3_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: experiment-analysis-secrets
              key: S3_SECRET_KEY
        - name: S3_API
          value: "s3v4"
        - name: S3_PATH
          value: "auto"
        - name: S3_BUCKET
          value: "test-experiment"
        - name: ENERGYAWARE
          value: "true"
        - name: DEBUG_COSTS
          value: "true"
        volumeMounts:
        - name: networkinfo-volume
          mountPath: /app/networkinfo.json
          subPath: networkinfo.json
        command: ["sh", "-c", "python3 -u /app/pce.py & python3 -u /app/app.py & wait"]
      volumes:
      - name: networkinfo-volume
        configMap:
          name: networkinfo

---
apiVersion: v1
kind: Service
metadata:
  name: networkstack-service
  namespace: across-tc32
spec:
  selector:
    app: networkstack
  ports:
  - name: flask-api
    port: 5000
    targetPort: 5000
    protocol: TCP
  type: ClusterIP